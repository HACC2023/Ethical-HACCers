"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const os_family_1 = __importDefault(require("os-family"));
const find_window_1 = __importDefault(require("./find-window"));
const exec_1 = require("../utils/exec");
const binaries_1 = __importDefault(require("../binaries"));
/**
 * Brings the browser window on top of all other windows.
 * @function
 * @async
 * @name bringWindowToFront
 * @param {string | object} windowDescriptor - The title of the web page opened in the window or a descriptor returned by findWindow.
 */
async function default_1(windowDescriptor) {
    var windowDescription = typeof windowDescriptor === 'string' ? await (0, find_window_1.default)(windowDescriptor) : windowDescriptor;
    var bringWindowToFrontArguments = void 0;
    if (os_family_1.default.win)
        bringWindowToFrontArguments = [windowDescription.hwnd];
    else if (os_family_1.default.linux)
        bringWindowToFrontArguments = [windowDescription.windowId];
    else if (os_family_1.default.mac)
        bringWindowToFrontArguments = [windowDescription.processId, windowDescription.windowId];
    else
        return;
    await (0, exec_1.execFile)(binaries_1.default.bringToFront, bringWindowToFrontArguments);
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJpbmctdG8tZnJvbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBpL2JyaW5nLXRvLWZyb250LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMERBQTJCO0FBQzNCLGdFQUF1QztBQUN2Qyx3Q0FBeUM7QUFDekMsMkRBQW1DO0FBRW5DOzs7Ozs7R0FNRztBQUNZLEtBQUssb0JBQVcsZ0JBQWdCO0lBQzNDLElBQUksaUJBQWlCLEdBQUcsT0FBTyxnQkFBZ0IsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBQSxxQkFBVSxFQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDO0lBQ3JILElBQUksMkJBQTJCLEdBQUcsS0FBSyxDQUFDLENBQUM7SUFFekMsSUFBSSxtQkFBRSxDQUFDLEdBQUc7UUFDTiwyQkFBMkIsR0FBRyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3RELElBQUksbUJBQUUsQ0FBQyxLQUFLO1FBQ2IsMkJBQTJCLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUMxRCxJQUFJLG1CQUFFLENBQUMsR0FBRztRQUNYLDJCQUEyQixHQUFHLENBQUMsaUJBQWlCLENBQUMsU0FBUyxFQUFFLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxDQUFDOztRQUV4RixPQUFPO0lBRVgsTUFBTSxJQUFBLGVBQVEsRUFBQyxrQkFBUSxDQUFDLFlBQVksRUFBRSwyQkFBMkIsQ0FBQyxDQUFDO0FBQ3ZFLENBQUM7QUFkRCw0QkFjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPUyBmcm9tICdvcy1mYW1pbHknO1xuaW1wb3J0IGZpbmRXaW5kb3cgZnJvbSAnLi9maW5kLXdpbmRvdyc7XG5pbXBvcnQgeyBleGVjRmlsZSB9IGZyb20gJy4uL3V0aWxzL2V4ZWMnO1xuaW1wb3J0IEJJTkFSSUVTIGZyb20gJy4uL2JpbmFyaWVzJztcblxuLyoqXG4gKiBCcmluZ3MgdGhlIGJyb3dzZXIgd2luZG93IG9uIHRvcCBvZiBhbGwgb3RoZXIgd2luZG93cy5cbiAqIEBmdW5jdGlvblxuICogQGFzeW5jXG4gKiBAbmFtZSBicmluZ1dpbmRvd1RvRnJvbnRcbiAqIEBwYXJhbSB7c3RyaW5nIHwgb2JqZWN0fSB3aW5kb3dEZXNjcmlwdG9yIC0gVGhlIHRpdGxlIG9mIHRoZSB3ZWIgcGFnZSBvcGVuZWQgaW4gdGhlIHdpbmRvdyBvciBhIGRlc2NyaXB0b3IgcmV0dXJuZWQgYnkgZmluZFdpbmRvdy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gKHdpbmRvd0Rlc2NyaXB0b3IpIHtcbiAgICB2YXIgd2luZG93RGVzY3JpcHRpb24gPSB0eXBlb2Ygd2luZG93RGVzY3JpcHRvciA9PT0gJ3N0cmluZycgPyBhd2FpdCBmaW5kV2luZG93KHdpbmRvd0Rlc2NyaXB0b3IpIDogd2luZG93RGVzY3JpcHRvcjtcbiAgICB2YXIgYnJpbmdXaW5kb3dUb0Zyb250QXJndW1lbnRzID0gdm9pZCAwO1xuXG4gICAgaWYgKE9TLndpbilcbiAgICAgICAgYnJpbmdXaW5kb3dUb0Zyb250QXJndW1lbnRzID0gW3dpbmRvd0Rlc2NyaXB0aW9uLmh3bmRdO1xuICAgIGVsc2UgaWYgKE9TLmxpbnV4KVxuICAgICAgICBicmluZ1dpbmRvd1RvRnJvbnRBcmd1bWVudHMgPSBbd2luZG93RGVzY3JpcHRpb24ud2luZG93SWRdO1xuICAgIGVsc2UgaWYgKE9TLm1hYylcbiAgICAgICAgYnJpbmdXaW5kb3dUb0Zyb250QXJndW1lbnRzID0gW3dpbmRvd0Rlc2NyaXB0aW9uLnByb2Nlc3NJZCwgd2luZG93RGVzY3JpcHRpb24ud2luZG93SWRdO1xuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuO1xuXG4gICAgYXdhaXQgZXhlY0ZpbGUoQklOQVJJRVMuYnJpbmdUb0Zyb250LCBicmluZ1dpbmRvd1RvRnJvbnRBcmd1bWVudHMpO1xufVxuIl19