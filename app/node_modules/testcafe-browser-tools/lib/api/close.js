"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const os_family_1 = __importDefault(require("os-family"));
const find_window_1 = __importDefault(require("./find-window"));
const exec_1 = require("../utils/exec");
const binaries_1 = __importDefault(require("../binaries"));
/**
 * Closes the browser window where the specified web page is opened.
 * @function
 * @async
 * @name close
 * @param {string | object} windowDescriptor - The title of the web page opened in the window or a descriptor returned by findWindow.
 */
async function default_1(windowDescriptor) {
    var windowDescription = typeof windowDescriptor === 'string' ? await (0, find_window_1.default)(windowDescriptor) : windowDescriptor;
    if (!windowDescription)
        return;
    var closeWindowArguments = void 0;
    if (os_family_1.default.win)
        closeWindowArguments = [windowDescription.hwnd];
    else if (os_family_1.default.mac)
        closeWindowArguments = [windowDescription.processId, windowDescription.windowId];
    else if (os_family_1.default.linux)
        closeWindowArguments = [windowDescription.windowId];
    else
        return;
    await (0, exec_1.execFile)(binaries_1.default.close, closeWindowArguments);
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBpL2Nsb3NlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMERBQTJCO0FBQzNCLGdFQUF1QztBQUN2Qyx3Q0FBeUM7QUFDekMsMkRBQW1DO0FBRW5DOzs7Ozs7R0FNRztBQUNZLEtBQUssb0JBQVcsZ0JBQWdCO0lBQzNDLElBQUksaUJBQWlCLEdBQUcsT0FBTyxnQkFBZ0IsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBQSxxQkFBVSxFQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDO0lBRXJILElBQUksQ0FBQyxpQkFBaUI7UUFDbEIsT0FBTztJQUVYLElBQUksb0JBQW9CLEdBQUcsS0FBSyxDQUFDLENBQUM7SUFFbEMsSUFBSSxtQkFBRSxDQUFDLEdBQUc7UUFDTixvQkFBb0IsR0FBRyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO1NBQy9DLElBQUksbUJBQUUsQ0FBQyxHQUFHO1FBQ1gsb0JBQW9CLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLEVBQUUsaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDaEYsSUFBSSxtQkFBRSxDQUFDLEtBQUs7UUFDYixvQkFBb0IsR0FBRyxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxDQUFDOztRQUVwRCxPQUFPO0lBRVgsTUFBTSxJQUFBLGVBQVEsRUFBQyxrQkFBUSxDQUFDLEtBQUssRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO0FBQ3pELENBQUM7QUFsQkQsNEJBa0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9TIGZyb20gJ29zLWZhbWlseSc7XG5pbXBvcnQgZmluZFdpbmRvdyBmcm9tICcuL2ZpbmQtd2luZG93JztcbmltcG9ydCB7IGV4ZWNGaWxlIH0gZnJvbSAnLi4vdXRpbHMvZXhlYyc7XG5pbXBvcnQgQklOQVJJRVMgZnJvbSAnLi4vYmluYXJpZXMnO1xuXG4vKipcbiAqIENsb3NlcyB0aGUgYnJvd3NlciB3aW5kb3cgd2hlcmUgdGhlIHNwZWNpZmllZCB3ZWIgcGFnZSBpcyBvcGVuZWQuXG4gKiBAZnVuY3Rpb25cbiAqIEBhc3luY1xuICogQG5hbWUgY2xvc2VcbiAqIEBwYXJhbSB7c3RyaW5nIHwgb2JqZWN0fSB3aW5kb3dEZXNjcmlwdG9yIC0gVGhlIHRpdGxlIG9mIHRoZSB3ZWIgcGFnZSBvcGVuZWQgaW4gdGhlIHdpbmRvdyBvciBhIGRlc2NyaXB0b3IgcmV0dXJuZWQgYnkgZmluZFdpbmRvdy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gKHdpbmRvd0Rlc2NyaXB0b3IpIHtcbiAgICB2YXIgd2luZG93RGVzY3JpcHRpb24gPSB0eXBlb2Ygd2luZG93RGVzY3JpcHRvciA9PT0gJ3N0cmluZycgPyBhd2FpdCBmaW5kV2luZG93KHdpbmRvd0Rlc2NyaXB0b3IpIDogd2luZG93RGVzY3JpcHRvcjtcblxuICAgIGlmICghd2luZG93RGVzY3JpcHRpb24pXG4gICAgICAgIHJldHVybjtcblxuICAgIHZhciBjbG9zZVdpbmRvd0FyZ3VtZW50cyA9IHZvaWQgMDtcblxuICAgIGlmIChPUy53aW4pXG4gICAgICAgIGNsb3NlV2luZG93QXJndW1lbnRzID0gW3dpbmRvd0Rlc2NyaXB0aW9uLmh3bmRdO1xuICAgIGVsc2UgaWYgKE9TLm1hYylcbiAgICAgICAgY2xvc2VXaW5kb3dBcmd1bWVudHMgPSBbd2luZG93RGVzY3JpcHRpb24ucHJvY2Vzc0lkLCB3aW5kb3dEZXNjcmlwdGlvbi53aW5kb3dJZF07XG4gICAgZWxzZSBpZiAoT1MubGludXgpXG4gICAgICAgIGNsb3NlV2luZG93QXJndW1lbnRzID0gW3dpbmRvd0Rlc2NyaXB0aW9uLndpbmRvd0lkXTtcbiAgICBlbHNlXG4gICAgICAgIHJldHVybjtcblxuICAgIGF3YWl0IGV4ZWNGaWxlKEJJTkFSSUVTLmNsb3NlLCBjbG9zZVdpbmRvd0FyZ3VtZW50cyk7XG59XG4iXX0=