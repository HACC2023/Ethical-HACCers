"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const render_callsite_sync_1 = __importDefault(require("../utils/render-callsite-sync"));
const create_stack_filter_1 = __importDefault(require("../errors/create-stack-filter"));
const get_renderes_1 = __importDefault(require("../utils/get-renderes"));
function addWarning(warningLog, msg, callsite = void 0, ...args) {
    const renderers = (0, get_renderes_1.default)(callsite);
    const renderedCallsite = (0, render_callsite_sync_1.default)(callsite, {
        renderer: renderers.noColor,
        stackFilter: (0, create_stack_filter_1.default)(Error.stackTraceLimit),
    });
    const isStringMsg = typeof msg === 'string';
    let message = isStringMsg ? msg.toString() : msg.message;
    const actionId = isStringMsg ? null : msg.actionId;
    message += `\n\n${renderedCallsite}`;
    warningLog.addWarning({ message, actionId }, ...args);
}
exports.default = addWarning;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXJlbmRlcmVkLXdhcm5pbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbm90aWZpY2F0aW9ucy9hZGQtcmVuZGVyZWQtd2FybmluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHlGQUErRDtBQUMvRCx3RkFBOEQ7QUFDOUQseUVBQWlEO0FBR2pELFNBQXdCLFVBQVUsQ0FBRSxVQUFzQixFQUFFLEdBQStCLEVBQUUsV0FBZ0IsS0FBSyxDQUFDLEVBQUUsR0FBRyxJQUFXO0lBQy9ILE1BQU0sU0FBUyxHQUFVLElBQUEsc0JBQVksRUFBQyxRQUFRLENBQUMsQ0FBQztJQUNoRCxNQUFNLGdCQUFnQixHQUFHLElBQUEsOEJBQWtCLEVBQUMsUUFBUSxFQUFFO1FBQ2xELFFBQVEsRUFBSyxTQUFTLENBQUMsT0FBTztRQUM5QixXQUFXLEVBQUUsSUFBQSw2QkFBaUIsRUFBQyxLQUFLLENBQUMsZUFBZSxDQUFDO0tBQ3hELENBQUMsQ0FBQztJQUVILE1BQU0sV0FBVyxHQUFHLE9BQU8sR0FBRyxLQUFLLFFBQVEsQ0FBQztJQUM1QyxJQUFJLE9BQU8sR0FBUyxXQUFXLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUUsR0FBeUIsQ0FBQyxPQUFPLENBQUM7SUFDdEYsTUFBTSxRQUFRLEdBQU0sV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFFLEdBQXlCLENBQUMsUUFBUSxDQUFDO0lBRTdFLE9BQU8sSUFBSSxPQUFPLGdCQUFnQixFQUFFLENBQUM7SUFFckMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQzFELENBQUM7QUFkRCw2QkFjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZW5kZXJDYWxsc2l0ZVN5bmMgZnJvbSAnLi4vdXRpbHMvcmVuZGVyLWNhbGxzaXRlLXN5bmMnO1xuaW1wb3J0IGNyZWF0ZVN0YWNrRmlsdGVyIGZyb20gJy4uL2Vycm9ycy9jcmVhdGUtc3RhY2stZmlsdGVyJztcbmltcG9ydCBnZXRSZW5kZXJlcnMgZnJvbSAnLi4vdXRpbHMvZ2V0LXJlbmRlcmVzJztcbmltcG9ydCBXYXJuaW5nTG9nLCB7IFdhcm5pbmdMb2dNZXNzYWdlIH0gZnJvbSAnLi93YXJuaW5nLWxvZyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFkZFdhcm5pbmcgKHdhcm5pbmdMb2c6IFdhcm5pbmdMb2csIG1zZzogV2FybmluZ0xvZ01lc3NhZ2UgfCBzdHJpbmcsIGNhbGxzaXRlOiBhbnkgPSB2b2lkIDAsIC4uLmFyZ3M6IGFueVtdKTogdm9pZCB7XG4gICAgY29uc3QgcmVuZGVyZXJzICAgICAgICA9IGdldFJlbmRlcmVycyhjYWxsc2l0ZSk7XG4gICAgY29uc3QgcmVuZGVyZWRDYWxsc2l0ZSA9IHJlbmRlckNhbGxzaXRlU3luYyhjYWxsc2l0ZSwge1xuICAgICAgICByZW5kZXJlcjogICAgcmVuZGVyZXJzLm5vQ29sb3IsXG4gICAgICAgIHN0YWNrRmlsdGVyOiBjcmVhdGVTdGFja0ZpbHRlcihFcnJvci5zdGFja1RyYWNlTGltaXQpLFxuICAgIH0pO1xuXG4gICAgY29uc3QgaXNTdHJpbmdNc2cgPSB0eXBlb2YgbXNnID09PSAnc3RyaW5nJztcbiAgICBsZXQgbWVzc2FnZSAgICAgICA9IGlzU3RyaW5nTXNnID8gbXNnLnRvU3RyaW5nKCkgOiAobXNnIGFzIFdhcm5pbmdMb2dNZXNzYWdlKS5tZXNzYWdlO1xuICAgIGNvbnN0IGFjdGlvbklkICAgID0gaXNTdHJpbmdNc2cgPyBudWxsIDogKG1zZyBhcyBXYXJuaW5nTG9nTWVzc2FnZSkuYWN0aW9uSWQ7XG5cbiAgICBtZXNzYWdlICs9IGBcXG5cXG4ke3JlbmRlcmVkQ2FsbHNpdGV9YDtcblxuICAgIHdhcm5pbmdMb2cuYWRkV2FybmluZyh7IG1lc3NhZ2UsIGFjdGlvbklkIH0sIC4uLmFyZ3MpO1xufVxuIl19