"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const connection_1 = __importDefault(require("../browser/connection"));
const errors_1 = require("./errors");
class NativeAutomationApiBase {
    constructor(browserId, client, options) {
        this._client = client;
        this._browserConnection = connection_1.default.getById(browserId);
        this.options = options;
    }
    async start() {
        throw (0, errors_1.notImplementedError)();
    }
    get _testRun() {
        return this._browserConnection.getCurrentTestRun();
    }
    async _getCurrentUrl() {
        const { frameTree } = await this._client.Page.getFrameTree();
        return new URL(frameTree.frame.url);
    }
}
exports.default = NativeAutomationApiBase;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbmF0aXZlLWF1dG9tYXRpb24vYXBpLWJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSx1RUFBc0Q7QUFFdEQscUNBQStDO0FBRy9DLE1BQXFCLHVCQUF1QjtJQUt4QyxZQUFhLFNBQWlCLEVBQUUsTUFBbUIsRUFBRSxPQUFvQztRQUNyRixJQUFJLENBQUMsT0FBTyxHQUFjLE1BQU0sQ0FBQztRQUNqQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsb0JBQWlCLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBc0IsQ0FBQztRQUNwRixJQUFJLENBQUMsT0FBTyxHQUFjLE9BQU8sQ0FBQztJQUN0QyxDQUFDO0lBRU0sS0FBSyxDQUFDLEtBQUs7UUFDZCxNQUFNLElBQUEsNEJBQW1CLEdBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsSUFBYyxRQUFRO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGlCQUFpQixFQUFhLENBQUM7SUFDbEUsQ0FBQztJQUVTLEtBQUssQ0FBQyxjQUFjO1FBQzFCLE1BQU0sRUFBRSxTQUFTLEVBQUUsR0FBRyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRTdELE9BQU8sSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN4QyxDQUFDO0NBQ0o7QUF4QkQsMENBd0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdG9jb2xBcGkgfSBmcm9tICdjaHJvbWUtcmVtb3RlLWludGVyZmFjZSc7XG5pbXBvcnQgQnJvd3NlckNvbm5lY3Rpb24gZnJvbSAnLi4vYnJvd3Nlci9jb25uZWN0aW9uJztcbmltcG9ydCBUZXN0UnVuIGZyb20gJy4uL3Rlc3QtcnVuJztcbmltcG9ydCB7IG5vdEltcGxlbWVudGVkRXJyb3IgfSBmcm9tICcuL2Vycm9ycyc7XG5pbXBvcnQgeyBOYXRpdmVBdXRvbWF0aW9uSW5pdE9wdGlvbnMgfSBmcm9tICcuLi9zaGFyZWQvdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYXRpdmVBdXRvbWF0aW9uQXBpQmFzZSB7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9jbGllbnQ6IFByb3RvY29sQXBpO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBfYnJvd3NlckNvbm5lY3Rpb246IEJyb3dzZXJDb25uZWN0aW9uO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBvcHRpb25zOiBOYXRpdmVBdXRvbWF0aW9uSW5pdE9wdGlvbnM7XG5cbiAgICBjb25zdHJ1Y3RvciAoYnJvd3NlcklkOiBzdHJpbmcsIGNsaWVudDogUHJvdG9jb2xBcGksIG9wdGlvbnM6IE5hdGl2ZUF1dG9tYXRpb25Jbml0T3B0aW9ucykge1xuICAgICAgICB0aGlzLl9jbGllbnQgICAgICAgICAgICA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5fYnJvd3NlckNvbm5lY3Rpb24gPSBCcm93c2VyQ29ubmVjdGlvbi5nZXRCeUlkKGJyb3dzZXJJZCkgYXMgQnJvd3NlckNvbm5lY3Rpb247XG4gICAgICAgIHRoaXMub3B0aW9ucyAgICAgICAgICAgID0gb3B0aW9ucztcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc3RhcnQgKCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICB0aHJvdyBub3RJbXBsZW1lbnRlZEVycm9yKCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGdldCBfdGVzdFJ1biAoKTogVGVzdFJ1biB7XG4gICAgICAgIHJldHVybiB0aGlzLl9icm93c2VyQ29ubmVjdGlvbi5nZXRDdXJyZW50VGVzdFJ1bigpIGFzIFRlc3RSdW47XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGFzeW5jIF9nZXRDdXJyZW50VXJsICgpOiBQcm9taXNlPFVSTD4ge1xuICAgICAgICBjb25zdCB7IGZyYW1lVHJlZSB9ID0gYXdhaXQgdGhpcy5fY2xpZW50LlBhZ2UuZ2V0RnJhbWVUcmVlKCk7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBVUkwoZnJhbWVUcmVlLmZyYW1lLnVybCk7XG4gICAgfVxufVxuIl19