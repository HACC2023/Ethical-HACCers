"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultCompilerOptions = exports.TYPESCRIPT_BLACKLISTED_OPTIONS = exports.TYPESCRIPT_COMPILER_NON_OVERRIDABLE_OPTIONS = exports.DEFAULT_TYPESCRIPT_COMPILER_OPTIONS = exports.DEFAULT_DISABLE_CROSS_DOMAIN = exports.DEFAULT_FILTER_FN = exports.DEFAULT_SCREENSHOT_THUMBNAILS = exports.DEFAULT_DISABLE_NATIVE_AUTOMATION = exports.DEFAULT_DISABLE_HTTP2 = exports.DEFAULT_RETRY_TEST_PAGES = exports.DEFAULT_DEVELOPMENT_MODE = exports.DEFAULT_SOURCE_DIRECTORIES = exports.DEFAULT_CONCURRENCY_VALUE = exports.DEFAULT_APP_INIT_DELAY = exports.DEFAULT_SPEED_VALUE = exports.DEFAULT_TIMEOUT = void 0;
const customizable_compilers_1 = __importDefault(require("./customizable-compilers"));
exports.DEFAULT_TIMEOUT = {
    selector: 10000,
    assertion: 3000,
    pageLoad: 3000,
};
exports.DEFAULT_SPEED_VALUE = 1;
exports.DEFAULT_APP_INIT_DELAY = 1000;
exports.DEFAULT_CONCURRENCY_VALUE = 1;
exports.DEFAULT_SOURCE_DIRECTORIES = ['tests', 'test'];
exports.DEFAULT_DEVELOPMENT_MODE = false;
exports.DEFAULT_RETRY_TEST_PAGES = false;
exports.DEFAULT_DISABLE_HTTP2 = false;
exports.DEFAULT_DISABLE_NATIVE_AUTOMATION = false;
exports.DEFAULT_SCREENSHOT_THUMBNAILS = true;
exports.DEFAULT_FILTER_FN = null;
exports.DEFAULT_DISABLE_CROSS_DOMAIN = false;
exports.DEFAULT_TYPESCRIPT_COMPILER_OPTIONS = {
    experimentalDecorators: true,
    emitDecoratorMetadata: true,
    allowJs: true,
    pretty: true,
    inlineSourceMap: true,
    noImplicitAny: false,
    module: 1 /* ts.ModuleKind.CommonJS */,
    moduleResolution: 2 /* ts.ModuleResolutionKind.Node */,
    target: 3 /* ts.ScriptTarget.ES2016 */,
    jsx: 2 /* ts.JsxEmit.React */,
    suppressOutputPathCheck: true,
    skipLibCheck: true,
};
exports.TYPESCRIPT_COMPILER_NON_OVERRIDABLE_OPTIONS = ['module', 'moduleResolution', 'target'];
exports.TYPESCRIPT_BLACKLISTED_OPTIONS = [
    'incremental',
    'tsBuildInfoFile',
    'emitDeclarationOnly',
    'declarationMap',
    'declarationDir',
    'composite',
    'outFile',
    'out',
];
const DEFAULT_COMPILER_OPTIONS = {
    [customizable_compilers_1.default.typescript]: {},
};
function getDefaultCompilerOptions() {
    // NOTE: Return the copy of the constant to prevent the modification of object properties
    return Object.assign({}, DEFAULT_COMPILER_OPTIONS);
}
exports.getDefaultCompilerOptions = getDefaultCompilerOptions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC12YWx1ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbi9kZWZhdWx0LXZhbHVlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxzRkFBNkQ7QUFFaEQsUUFBQSxlQUFlLEdBQUc7SUFDM0IsUUFBUSxFQUFHLEtBQUs7SUFDaEIsU0FBUyxFQUFFLElBQUk7SUFDZixRQUFRLEVBQUcsSUFBSTtDQUNsQixDQUFDO0FBRVcsUUFBQSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7QUFFeEIsUUFBQSxzQkFBc0IsR0FBRyxJQUFJLENBQUM7QUFFOUIsUUFBQSx5QkFBeUIsR0FBRyxDQUFDLENBQUM7QUFFOUIsUUFBQSwwQkFBMEIsR0FBRyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztBQUUvQyxRQUFBLHdCQUF3QixHQUFZLEtBQUssQ0FBQztBQUMxQyxRQUFBLHdCQUF3QixHQUFZLEtBQUssQ0FBQztBQUMxQyxRQUFBLHFCQUFxQixHQUFlLEtBQUssQ0FBQztBQUMxQyxRQUFBLGlDQUFpQyxHQUFHLEtBQUssQ0FBQztBQUMxQyxRQUFBLDZCQUE2QixHQUFPLElBQUksQ0FBQztBQUN6QyxRQUFBLGlCQUFpQixHQUFtQixJQUFJLENBQUM7QUFDekMsUUFBQSw0QkFBNEIsR0FBTyxLQUFLLENBQUM7QUFFekMsUUFBQSxtQ0FBbUMsR0FBaUM7SUFDN0Usc0JBQXNCLEVBQUcsSUFBSTtJQUM3QixxQkFBcUIsRUFBSSxJQUFJO0lBQzdCLE9BQU8sRUFBa0IsSUFBSTtJQUM3QixNQUFNLEVBQW1CLElBQUk7SUFDN0IsZUFBZSxFQUFVLElBQUk7SUFDN0IsYUFBYSxFQUFZLEtBQUs7SUFDOUIsTUFBTSxFQUFtQixDQUFDLENBQUMsNEJBQTRCO0lBQ3ZELGdCQUFnQixFQUFTLENBQUMsQ0FBQyxrQ0FBa0M7SUFDN0QsTUFBTSxFQUFtQixDQUFDLENBQUMsNEJBQTRCO0lBQ3ZELEdBQUcsRUFBc0IsQ0FBQyxDQUFDLHNCQUFzQjtJQUNqRCx1QkFBdUIsRUFBRSxJQUFJO0lBQzdCLFlBQVksRUFBYSxJQUFJO0NBQ2hDLENBQUM7QUFFVyxRQUFBLDJDQUEyQyxHQUFHLENBQUMsUUFBUSxFQUFFLGtCQUFrQixFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBRXZGLFFBQUEsOEJBQThCLEdBQUc7SUFDMUMsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsU0FBUztJQUNULEtBQUs7Q0FDUixDQUFDO0FBRUYsTUFBTSx3QkFBd0IsR0FBRztJQUM3QixDQUFDLGdDQUFxQixDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUU7Q0FDekMsQ0FBQztBQUVGLFNBQWdCLHlCQUF5QjtJQUNyQyx5RkFBeUY7SUFDekYsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO0FBQ3ZELENBQUM7QUFIRCw4REFHQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpY3Rpb25hcnkgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IEN1c3RvbWl6YWJsZUNvbXBpbGVycyBmcm9tICcuL2N1c3RvbWl6YWJsZS1jb21waWxlcnMnO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9USU1FT1VUID0ge1xuICAgIHNlbGVjdG9yOiAgMTAwMDAsXG4gICAgYXNzZXJ0aW9uOiAzMDAwLFxuICAgIHBhZ2VMb2FkOiAgMzAwMCxcbn07XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NQRUVEX1ZBTFVFID0gMTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQVBQX0lOSVRfREVMQVkgPSAxMDAwO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9DT05DVVJSRU5DWV9WQUxVRSA9IDE7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NPVVJDRV9ESVJFQ1RPUklFUyA9IFsndGVzdHMnLCAndGVzdCddO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9ERVZFTE9QTUVOVF9NT0RFICAgICAgICAgID0gZmFsc2U7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SRVRSWV9URVNUX1BBR0VTICAgICAgICAgID0gZmFsc2U7XG5leHBvcnQgY29uc3QgREVGQVVMVF9ESVNBQkxFX0hUVFAyICAgICAgICAgICAgID0gZmFsc2U7XG5leHBvcnQgY29uc3QgREVGQVVMVF9ESVNBQkxFX05BVElWRV9BVVRPTUFUSU9OID0gZmFsc2U7XG5leHBvcnQgY29uc3QgREVGQVVMVF9TQ1JFRU5TSE9UX1RIVU1CTkFJTFMgICAgID0gdHJ1ZTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0ZJTFRFUl9GTiAgICAgICAgICAgICAgICAgPSBudWxsO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfRElTQUJMRV9DUk9TU19ET01BSU4gICAgID0gZmFsc2U7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1RZUEVTQ1JJUFRfQ09NUElMRVJfT1BUSU9OUzogRGljdGlvbmFyeTxib29sZWFuIHwgbnVtYmVyPiA9IHtcbiAgICBleHBlcmltZW50YWxEZWNvcmF0b3JzOiAgdHJ1ZSxcbiAgICBlbWl0RGVjb3JhdG9yTWV0YWRhdGE6ICAgdHJ1ZSxcbiAgICBhbGxvd0pzOiAgICAgICAgICAgICAgICAgdHJ1ZSxcbiAgICBwcmV0dHk6ICAgICAgICAgICAgICAgICAgdHJ1ZSxcbiAgICBpbmxpbmVTb3VyY2VNYXA6ICAgICAgICAgdHJ1ZSxcbiAgICBub0ltcGxpY2l0QW55OiAgICAgICAgICAgZmFsc2UsXG4gICAgbW9kdWxlOiAgICAgICAgICAgICAgICAgIDEgLyogdHMuTW9kdWxlS2luZC5Db21tb25KUyAqLyxcbiAgICBtb2R1bGVSZXNvbHV0aW9uOiAgICAgICAgMiAvKiB0cy5Nb2R1bGVSZXNvbHV0aW9uS2luZC5Ob2RlICovLFxuICAgIHRhcmdldDogICAgICAgICAgICAgICAgICAzIC8qIHRzLlNjcmlwdFRhcmdldC5FUzIwMTYgKi8sXG4gICAganN4OiAgICAgICAgICAgICAgICAgICAgIDIgLyogdHMuSnN4RW1pdC5SZWFjdCAqLyxcbiAgICBzdXBwcmVzc091dHB1dFBhdGhDaGVjazogdHJ1ZSxcbiAgICBza2lwTGliQ2hlY2s6ICAgICAgICAgICAgdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBUWVBFU0NSSVBUX0NPTVBJTEVSX05PTl9PVkVSUklEQUJMRV9PUFRJT05TID0gWydtb2R1bGUnLCAnbW9kdWxlUmVzb2x1dGlvbicsICd0YXJnZXQnXTtcblxuZXhwb3J0IGNvbnN0IFRZUEVTQ1JJUFRfQkxBQ0tMSVNURURfT1BUSU9OUyA9IFtcbiAgICAnaW5jcmVtZW50YWwnLFxuICAgICd0c0J1aWxkSW5mb0ZpbGUnLFxuICAgICdlbWl0RGVjbGFyYXRpb25Pbmx5JyxcbiAgICAnZGVjbGFyYXRpb25NYXAnLFxuICAgICdkZWNsYXJhdGlvbkRpcicsXG4gICAgJ2NvbXBvc2l0ZScsXG4gICAgJ291dEZpbGUnLFxuICAgICdvdXQnLFxuXTtcblxuY29uc3QgREVGQVVMVF9DT01QSUxFUl9PUFRJT05TID0ge1xuICAgIFtDdXN0b21pemFibGVDb21waWxlcnMudHlwZXNjcmlwdF06IHt9LFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRDb21waWxlck9wdGlvbnMgKCk6IG9iamVjdCB7XG4gICAgLy8gTk9URTogUmV0dXJuIHRoZSBjb3B5IG9mIHRoZSBjb25zdGFudCB0byBwcmV2ZW50IHRoZSBtb2RpZmljYXRpb24gb2Ygb2JqZWN0IHByb3BlcnRpZXNcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9DT01QSUxFUl9PUFRJT05TKTtcbn1cbiJdfQ==