"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    notElementOrTextNode: (targetType) => `
        The ${targetType} is neither a DOM element nor a text node.
    `,
    elOutsideBounds: (target, targetType) => `
        The ${targetType} (${target}) is located outside the the layout viewport.
    `,
    elHasWidthOrHeightZero: (target, targetType, width, height) => `
        The ${targetType} (${target}) is too small to be visible: ${width}px x ${height}px.
    `,
    elHasDisplayNone: (target, targetType) => `
        The ${targetType} (${target}) is invisible. 
        The value of its 'display' property is 'none'.
    `,
    parentHasDisplayNone: (target, targetType, parent) => `
        The ${targetType} (${target}) is invisible. 
        It descends from an element that has the 'display: none' property (${parent}).
    `,
    elHasVisibilityHidden: (target, targetType) => `
        The ${targetType} (${target}) is invisible.
        The value of its 'visibility' property is 'hidden'.
    `,
    parentHasVisibilityHidden: (target, targetType, parent) => `
        The ${targetType} (${target}) is invisible.
        It descends from an element that has the 'visibility: hidden' property (${parent}).
    `,
    elHasVisibilityCollapse: (target, targetType) => `
        The ${targetType} (${target}) is invisible.
        The value of its 'visibility' property is 'collapse'.
    `,
    parentHasVisibilityCollapse: (target, targetType, parent) => `
        The ${targetType} (${target}) is invisible.
        It descends from an element that has the 'visibility: collapse' property (${parent}).
    `,
    elNotRendered: (target, targetType) => `
        The ${targetType} (${target}) has not been rendered.
    `,
    optionNotVisible: (target, targetType, parent) => `
        The ${targetType} (${target}) is invisible. 
        The parent element (${parent}) is collapsed, and its length is shorter than 2.
    `,
    mapContainerNotVisible: (target, containerHiddenReason) => `
        The action target (${target}) is invisible because ${containerHiddenReason}
    `,
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC1oaWRkZW4tcmVhc29ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaGFyZWQvZXJyb3JzL2VsZW1lbnQtaGlkZGVuLXJlYXNvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrQkFBZTtJQUNYLG9CQUFvQixFQUFFLENBQUMsVUFBa0IsRUFBRSxFQUFFLENBQUM7Y0FDcEMsVUFBVTtLQUNuQjtJQUNELGVBQWUsRUFBRSxDQUFDLE1BQWMsRUFBRSxVQUFrQixFQUFFLEVBQUUsQ0FBQztjQUMvQyxVQUFVLEtBQUssTUFBTTtLQUM5QjtJQUNELHNCQUFzQixFQUFFLENBQUMsTUFBYyxFQUFFLFVBQWtCLEVBQUUsS0FBYSxFQUFFLE1BQWMsRUFBRSxFQUFFLENBQUM7Y0FDckYsVUFBVSxLQUFLLE1BQU0saUNBQWlDLEtBQUssUUFBUSxNQUFNO0tBQ2xGO0lBQ0QsZ0JBQWdCLEVBQUUsQ0FBQyxNQUFjLEVBQUUsVUFBa0IsRUFBRSxFQUFFLENBQUM7Y0FDaEQsVUFBVSxLQUFLLE1BQU07O0tBRTlCO0lBQ0Qsb0JBQW9CLEVBQUUsQ0FBQyxNQUFjLEVBQUUsVUFBa0IsRUFBRSxNQUFjLEVBQUUsRUFBRSxDQUFDO2NBQ3BFLFVBQVUsS0FBSyxNQUFNOzZFQUMwQyxNQUFNO0tBQzlFO0lBQ0QscUJBQXFCLEVBQUUsQ0FBQyxNQUFjLEVBQUUsVUFBa0IsRUFBRSxFQUFFLENBQUM7Y0FDckQsVUFBVSxLQUFLLE1BQU07O0tBRTlCO0lBQ0QseUJBQXlCLEVBQUUsQ0FBQyxNQUFjLEVBQUUsVUFBa0IsRUFBRSxNQUFjLEVBQUUsRUFBRSxDQUFDO2NBQ3pFLFVBQVUsS0FBSyxNQUFNO2tGQUMrQyxNQUFNO0tBQ25GO0lBQ0QsdUJBQXVCLEVBQUUsQ0FBQyxNQUFjLEVBQUUsVUFBa0IsRUFBRSxFQUFFLENBQUM7Y0FDdkQsVUFBVSxLQUFLLE1BQU07O0tBRTlCO0lBQ0QsMkJBQTJCLEVBQUUsQ0FBQyxNQUFjLEVBQUUsVUFBa0IsRUFBRSxNQUFjLEVBQUUsRUFBRSxDQUFDO2NBQzNFLFVBQVUsS0FBSyxNQUFNO29GQUNpRCxNQUFNO0tBQ3JGO0lBQ0QsYUFBYSxFQUFFLENBQUMsTUFBYyxFQUFFLFVBQWtCLEVBQUUsRUFBRSxDQUFDO2NBQzdDLFVBQVUsS0FBSyxNQUFNO0tBQzlCO0lBQ0QsZ0JBQWdCLEVBQUUsQ0FBQyxNQUFjLEVBQUUsVUFBa0IsRUFBRSxNQUFjLEVBQUUsRUFBRSxDQUFDO2NBQ2hFLFVBQVUsS0FBSyxNQUFNOzhCQUNMLE1BQU07S0FDL0I7SUFDRCxzQkFBc0IsRUFBRSxDQUFDLE1BQWMsRUFBRSxxQkFBNkIsRUFBRSxFQUFFLENBQUM7NkJBQ2xELE1BQU0sMEJBQTBCLHFCQUFxQjtLQUM3RTtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbm90RWxlbWVudE9yVGV4dE5vZGU6ICh0YXJnZXRUeXBlOiBzdHJpbmcpID0+IGBcbiAgICAgICAgVGhlICR7dGFyZ2V0VHlwZX0gaXMgbmVpdGhlciBhIERPTSBlbGVtZW50IG5vciBhIHRleHQgbm9kZS5cbiAgICBgLFxuICAgIGVsT3V0c2lkZUJvdW5kczogKHRhcmdldDogc3RyaW5nLCB0YXJnZXRUeXBlOiBzdHJpbmcpID0+IGBcbiAgICAgICAgVGhlICR7dGFyZ2V0VHlwZX0gKCR7dGFyZ2V0fSkgaXMgbG9jYXRlZCBvdXRzaWRlIHRoZSB0aGUgbGF5b3V0IHZpZXdwb3J0LlxuICAgIGAsXG4gICAgZWxIYXNXaWR0aE9ySGVpZ2h0WmVybzogKHRhcmdldDogc3RyaW5nLCB0YXJnZXRUeXBlOiBzdHJpbmcsIHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSA9PiBgXG4gICAgICAgIFRoZSAke3RhcmdldFR5cGV9ICgke3RhcmdldH0pIGlzIHRvbyBzbWFsbCB0byBiZSB2aXNpYmxlOiAke3dpZHRofXB4IHggJHtoZWlnaHR9cHguXG4gICAgYCxcbiAgICBlbEhhc0Rpc3BsYXlOb25lOiAodGFyZ2V0OiBzdHJpbmcsIHRhcmdldFR5cGU6IHN0cmluZykgPT4gYFxuICAgICAgICBUaGUgJHt0YXJnZXRUeXBlfSAoJHt0YXJnZXR9KSBpcyBpbnZpc2libGUuIFxuICAgICAgICBUaGUgdmFsdWUgb2YgaXRzICdkaXNwbGF5JyBwcm9wZXJ0eSBpcyAnbm9uZScuXG4gICAgYCxcbiAgICBwYXJlbnRIYXNEaXNwbGF5Tm9uZTogKHRhcmdldDogc3RyaW5nLCB0YXJnZXRUeXBlOiBzdHJpbmcsIHBhcmVudDogc3RyaW5nKSA9PiBgXG4gICAgICAgIFRoZSAke3RhcmdldFR5cGV9ICgke3RhcmdldH0pIGlzIGludmlzaWJsZS4gXG4gICAgICAgIEl0IGRlc2NlbmRzIGZyb20gYW4gZWxlbWVudCB0aGF0IGhhcyB0aGUgJ2Rpc3BsYXk6IG5vbmUnIHByb3BlcnR5ICgke3BhcmVudH0pLlxuICAgIGAsXG4gICAgZWxIYXNWaXNpYmlsaXR5SGlkZGVuOiAodGFyZ2V0OiBzdHJpbmcsIHRhcmdldFR5cGU6IHN0cmluZykgPT4gYFxuICAgICAgICBUaGUgJHt0YXJnZXRUeXBlfSAoJHt0YXJnZXR9KSBpcyBpbnZpc2libGUuXG4gICAgICAgIFRoZSB2YWx1ZSBvZiBpdHMgJ3Zpc2liaWxpdHknIHByb3BlcnR5IGlzICdoaWRkZW4nLlxuICAgIGAsXG4gICAgcGFyZW50SGFzVmlzaWJpbGl0eUhpZGRlbjogKHRhcmdldDogc3RyaW5nLCB0YXJnZXRUeXBlOiBzdHJpbmcsIHBhcmVudDogc3RyaW5nKSA9PiBgXG4gICAgICAgIFRoZSAke3RhcmdldFR5cGV9ICgke3RhcmdldH0pIGlzIGludmlzaWJsZS5cbiAgICAgICAgSXQgZGVzY2VuZHMgZnJvbSBhbiBlbGVtZW50IHRoYXQgaGFzIHRoZSAndmlzaWJpbGl0eTogaGlkZGVuJyBwcm9wZXJ0eSAoJHtwYXJlbnR9KS5cbiAgICBgLFxuICAgIGVsSGFzVmlzaWJpbGl0eUNvbGxhcHNlOiAodGFyZ2V0OiBzdHJpbmcsIHRhcmdldFR5cGU6IHN0cmluZykgPT4gYFxuICAgICAgICBUaGUgJHt0YXJnZXRUeXBlfSAoJHt0YXJnZXR9KSBpcyBpbnZpc2libGUuXG4gICAgICAgIFRoZSB2YWx1ZSBvZiBpdHMgJ3Zpc2liaWxpdHknIHByb3BlcnR5IGlzICdjb2xsYXBzZScuXG4gICAgYCxcbiAgICBwYXJlbnRIYXNWaXNpYmlsaXR5Q29sbGFwc2U6ICh0YXJnZXQ6IHN0cmluZywgdGFyZ2V0VHlwZTogc3RyaW5nLCBwYXJlbnQ6IHN0cmluZykgPT4gYFxuICAgICAgICBUaGUgJHt0YXJnZXRUeXBlfSAoJHt0YXJnZXR9KSBpcyBpbnZpc2libGUuXG4gICAgICAgIEl0IGRlc2NlbmRzIGZyb20gYW4gZWxlbWVudCB0aGF0IGhhcyB0aGUgJ3Zpc2liaWxpdHk6IGNvbGxhcHNlJyBwcm9wZXJ0eSAoJHtwYXJlbnR9KS5cbiAgICBgLFxuICAgIGVsTm90UmVuZGVyZWQ6ICh0YXJnZXQ6IHN0cmluZywgdGFyZ2V0VHlwZTogc3RyaW5nKSA9PiBgXG4gICAgICAgIFRoZSAke3RhcmdldFR5cGV9ICgke3RhcmdldH0pIGhhcyBub3QgYmVlbiByZW5kZXJlZC5cbiAgICBgLFxuICAgIG9wdGlvbk5vdFZpc2libGU6ICh0YXJnZXQ6IHN0cmluZywgdGFyZ2V0VHlwZTogc3RyaW5nLCBwYXJlbnQ6IHN0cmluZykgPT4gYFxuICAgICAgICBUaGUgJHt0YXJnZXRUeXBlfSAoJHt0YXJnZXR9KSBpcyBpbnZpc2libGUuIFxuICAgICAgICBUaGUgcGFyZW50IGVsZW1lbnQgKCR7cGFyZW50fSkgaXMgY29sbGFwc2VkLCBhbmQgaXRzIGxlbmd0aCBpcyBzaG9ydGVyIHRoYW4gMi5cbiAgICBgLFxuICAgIG1hcENvbnRhaW5lck5vdFZpc2libGU6ICh0YXJnZXQ6IHN0cmluZywgY29udGFpbmVySGlkZGVuUmVhc29uOiBzdHJpbmcpID0+IGBcbiAgICAgICAgVGhlIGFjdGlvbiB0YXJnZXQgKCR7dGFyZ2V0fSkgaXMgaW52aXNpYmxlIGJlY2F1c2UgJHtjb250YWluZXJIaWRkZW5SZWFzb259XG4gICAgYCxcbn07XG4iXX0=