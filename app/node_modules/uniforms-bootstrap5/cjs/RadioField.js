"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const react_1 = tslib_1.__importDefault(require("react"));
const uniforms_1 = require("uniforms");
const wrapField_1 = tslib_1.__importDefault(require("./wrapField"));
const base64 = typeof btoa === 'undefined'
    ? /* istanbul ignore next */ /* istanbul ignore next */ x => Buffer.from(x).toString('base64')
    : btoa;
const escape = (x) => base64(encodeURIComponent(x)).replace(/=+$/, '');
function Radio(props) {
    var _a;
    return wrapField_1.default(props, (_a = props.allowedValues) === null || _a === void 0 ? void 0 : _a.map(item => (react_1.default.createElement("div", { key: item, className: classnames_1.default(props.inputClassName, 'form-check', {
            'text-danger': props.error,
            'text-success': !props.error && props.changed,
            'form-check-inline': props.inline,
        }) },
        react_1.default.createElement("label", { htmlFor: `${props.id}-${escape(item)}`, className: "form-check-label" },
            react_1.default.createElement("input", { checked: item === props.value, className: "form-check-input", disabled: props.disabled, id: `${props.id}-${escape(item)}`, name: props.name, onChange: () => {
                    if (!props.readOnly) {
                        props.onChange(item);
                    }
                }, type: "radio" }),
            ' ',
            props.transform ? props.transform(item) : item)))));
}
exports.default = uniforms_1.connectField(Radio, { kind: 'leaf' });
