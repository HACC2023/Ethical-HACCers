"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOSInfo = exports.getLinuxInfo = exports.getWindowsInfo = exports.getMacInfo = void 0;
const get_linux_info_1 = __importDefault(require("./utils/get-linux-info"));
exports.getLinuxInfo = get_linux_info_1.default;
const get_windows_info_1 = __importDefault(require("./utils/get-windows-info"));
exports.getWindowsInfo = get_windows_info_1.default;
const get_mac_info_1 = __importDefault(require("./utils/get-mac-info"));
exports.getMacInfo = get_mac_info_1.default;
const OS = require('os-family');
function getOSInfo() {
    return __awaiter(this, void 0, void 0, function* () {
        if (OS.linux)
            return yield (0, get_linux_info_1.default)();
        if (OS.win)
            return (0, get_windows_info_1.default)();
        if (OS.mac)
            return (0, get_mac_info_1.default)();
        return null;
    });
}
exports.default = getOSInfo;
exports.getOSInfo = getOSInfo;
